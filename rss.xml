<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[sandbox.code]]></title><description><![CDATA[A starter blog what hari learns over time.]]></description><link>https://gatsby-starter-blog-demo.netlify.com/</link><generator>RSS for Node</generator><lastBuildDate>Thu, 19 Sep 2019 08:19:32 GMT</lastBuildDate><item><title><![CDATA[Gatsby and Dynamic pages]]></title><description><![CDATA[Gatsby and dynamic pages Setting up a simple website with Gatsby is the easiest thing ever, you just dump your pages in  and you are done…]]></description><link>https://gatsby-starter-blog-demo.netlify.com//second/</link><guid isPermaLink="false">https://gatsby-starter-blog-demo.netlify.com//second/</guid><pubDate>Wed, 18 Sep 2019 13:51:54 GMT</pubDate><content:encoded>&lt;h2&gt;Gatsby and dynamic pages&lt;/h2&gt;
&lt;p&gt;Setting up a simple website with Gatsby is the easiest thing ever, you just dump your pages in &lt;code class=&quot;language-text&quot;&gt;src/pages&lt;/code&gt; and you are done. &lt;/p&gt;
&lt;p&gt;But if you are adventourus, ad-vent-tur-ous , is that right? you will say let me go for JSON or MD files for data and have a proper CMS.&lt;/p&gt;
&lt;p&gt;i did it, if i can do it anyone can. But there are &lt;strong&gt;some minor  issues while setting up Gatsby pages dynamically&lt;/strong&gt; which prop up and it is not clearly explained where we had gone wrong.&lt;/p&gt;
&lt;p&gt;My issue was the blog sub pages not opening up properly, i.e i would get the list of items on my home (&lt;code class=&quot;language-text&quot;&gt;\&lt;/code&gt;) page. But if i, say for example, go to &lt;code class=&quot;language-text&quot;&gt;localhost:8000/first&lt;/code&gt; if would redirect me  to a 404.&lt;/p&gt;
&lt;p&gt;This was happening despite my GraphQL query returning proper results.&lt;/p&gt;
&lt;p&gt;So lets dive in and hopefully thsi page will go into the massive knowledge bank of Gatsby initial setups and hiccups which is already present online.&lt;/p&gt;
&lt;p&gt;If you are still here and are already  feeling &lt;em&gt;“urgh! just show me the code already”&lt;/em&gt; , i hear you .&lt;/p&gt;
&lt;h4&gt;Making these assumptions&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;you know React&lt;/li&gt;
&lt;li&gt;you have setup Gatsby and have seen your initial page in your local dev environment&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Go through these links first , and if is doesn’t help do come back here.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Gatsby Home &lt;a href=&quot;https://www.gatsbyjs.org/tutorial/&quot;&gt;tutorials&lt;/a&gt; , reading &lt;strong&gt;step1 - step 7&lt;/strong&gt; of this will set you up nicely.&lt;/li&gt;
&lt;li&gt;Deploying to [gh-pages] (&lt;a href=&quot;https://www.gatsbyjs.org/docs/how-gatsby-works-with-github-pages/&quot;&gt;https://www.gatsbyjs.org/docs/how-gatsby-works-with-github-pages/&lt;/a&gt;) . Github pages is an opinionated deployment solution, i am recomending it as i am using it for now. Will update if anything changes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;…&lt;/p&gt;
&lt;p&gt;…&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Back? you really do want the code don’t you?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Allright, assuming you have setup Gatsby and are stuck somewhere .&lt;/p&gt;
&lt;p&gt;This method is relatively straight forward. If you are using Markdown files as the source of your data, please confirm if you are using the &lt;strong&gt;gatsby-transformer-remark&lt;/strong&gt; plugin. &lt;/p&gt;
&lt;p&gt;First let us look at your &lt;code class=&quot;language-text&quot;&gt;gatsby-node.js&lt;/code&gt; , in that file you should be having your &lt;code class=&quot;language-text&quot;&gt;createPages&lt;/code&gt; method , which is one of the &lt;a href=&quot;https://www.gatsbyjs.org/docs/node-apis/#createPages&quot;&gt;gatsby node APIs&lt;/a&gt; .&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;exports.createPages = ({ actions, graphql }) =&amp;gt; {
  const { createPage } = actions
  const blogPost = path.resolve(`./src/templates/blog-post.js`)
  return graphql(`
  {
    allMarkdownRemark(
     sort: { fields: [frontmatter___date], order: DESC }
    ) 
   {
    edges {
      node {
        fields {
          slug
        }
        frontmatter {
          
          title
          
        }
      }
    }
  }
}`).then(result =&amp;gt; {
if (result.errors) {
  return Promise.reject(result.errors)
}
// get all posts
const posts = result.data.allMarkdownRemark.edges;

// Create post detail pages
posts.forEach((post, index) =&amp;gt; {
  createPage({
    path: post.node.frontmatter.path,
    component: blogPost,
    context: {
      slug: post.node.fields.slug,
    },
  })
})
})
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Cutting to the meat of the matter, you can see the the &lt;code class=&quot;language-text&quot;&gt;createPage&lt;/code&gt; method runs our graphQL query and fetches all the data. But what happens after that ? We create individual pages with &lt;code class=&quot;language-text&quot;&gt;createPage&lt;/code&gt;method with a specified template , mine are located at &lt;code class=&quot;language-text&quot;&gt;src/templates/...&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;This should set you up , just type some localhost:8000/psfsf (an error page basically) and it should show the rest of your &lt;em&gt;“available”&lt;/em&gt; pages in bottom.&lt;/p&gt;
&lt;p&gt;If you still have the issue, check these.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;check your frontmatter in your md files, sometimes a simple duplication of the frontmatter data, such as unique paths, will cause annoying issues.&lt;/li&gt;
&lt;li&gt;check if you have set up your transform plugins to point to the correct folder.
*If you are using slugs (i.e translating the file name into navigable paths) make sure you have set up custom nodeFileds properly using &lt;code class=&quot;language-text&quot;&gt;onCreateNode&lt;/code&gt; API.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now go out there and be somebody !!&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Hello, there Mindy*]]></title><description><![CDATA[Welp, i am sure this is bout to get interesting, been trying to get into tech writing for a while and things like tech stack,choice of…]]></description><link>https://gatsby-starter-blog-demo.netlify.com//first/</link><guid isPermaLink="false">https://gatsby-starter-blog-demo.netlify.com//first/</guid><pubDate>Thu, 11 Jul 2019 06:15:26 GMT</pubDate><content:encoded>&lt;p&gt;Welp, i am sure this is bout to get interesting, been trying to get into tech writing for a while and things like tech stack,choice of frameworks,day commitments made me push it off for sometime.
One day,i came across the simple amazing blog &lt;a href=&quot;https://overreacted.io/&quot;&gt;overeacted.io&lt;/a&gt; of the equally amazing &lt;a href=&quot;https://twitter.com/dan_abramov&quot;&gt;Dan Abramov&lt;/a&gt; i had a hunch that it would be of the JAMStack.&lt;/p&gt;
&lt;p&gt;Imagine my surprise when i learnt of a entire site generator  based on my fav library React, i was sold immediately. If you had guessed already , yes this was built using &lt;a href=&quot;https://www.gatsbyjs.org/&quot;&gt;Gatsby&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;But why a blog?&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Is it a blog though&lt;/em&gt; ! I wanted a place to jot down my thoughts and i have been doing that in Notepad since forever  and most of the time i forget what i learnt and nothing is worse than forgetting your &lt;strong&gt;Aahaaa&lt;/strong&gt; moments :( &lt;/p&gt;
&lt;p&gt;So this is an attempt to digitally preserve my learning and pass it on to the community so to speak. Visitors, pardon my grammatical skills and n00b thoughts.&lt;/p&gt;
&lt;p&gt;Lets roll!&lt;/p&gt;</content:encoded></item></channel></rss>